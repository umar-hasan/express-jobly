{"version":3,"sources":["api.js","UserContext.js","JobCard.js","CompanyDetail.js","CompanyCard.js","CompanyList.js","JobList.js","Login.js","Register.js","Home.js","ProtectedRoute.js","Profile.js","Navigator.js","App.js","useLocalStorage.js","reportWebVitals.js","index.js"],"names":["BASE_URL","process","REACT_APP_BASE_URL","JoblyApi","endpoint","data","method","console","debug","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","loginData","this","request","res","username","user","jobId","handle","company","companies","jobs","localStorage","getItem","UserContext","createContext","JobCard","job","currentUser","useContext","useState","applications","includes","id","applied","setapplied","a","applyToJob","log","Card","Body","Title","title","salary","equity","Button","onClick","apply","disabled","CompanyDetail","companyParam","useParams","setcompany","setjobs","useEffect","getCompany","name","description","map","j","CompanyCard","to","src","logoUrl","className","CompanyList","setcompanies","getAllCompanies","getCompanies","c","JobList","getAllJobs","getJobs","Login","login","history","useHistory","password","formData","setformData","handleSubmit","e","preventDefault","push","handleChange","f","target","value","Container","Form","onSubmit","FormGroup","FormLabel","FormControl","type","placeholder","onChange","required","Register","register","firstName","lastName","email","result","success","Home","ProtectedRoute","path","children","Profile","setcurrentUser","initialState","updateCurrentUser","updatedUser","htmlFor","plaintext","readOnly","defaultValue","Navigation","logout","Navbar","NavbarBrand","Nav","App","key","firstValue","item","removeItem","setItem","useLocalStorage","settoken","loaded","setloaded","jwt","decode","getCurrentUser","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9921ea6a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token = localStorage.getItem(\"jobly-token\");\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n      ? data\n      : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  static async login(loginData) {\n    let res = await this.request(\"auth/token\", loginData, \"post\")\n    this.token = res.token\n    return res.token\n  }\n\n  static async register(data) {\n    let res = await this.request(\"auth/register\", data, \"post\")\n    this.token = res.token\n    return res.token\n  }\n\n  static logout() {\n    if (this.token) this.token = null\n  }\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`)\n    return res.user\n  }\n\n  static async updateCurrentUser(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\")\n    return res.user\n  }\n\n  static async applyToJob(username, jobId) {\n    let res = await this.request(`users/${username}/jobs/${jobId}`, {}, \"post\")\n    return res\n  }\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  // obviously, you'll add a lot here ...\n\n  static async getAllCompanies() {\n    let res = await this.request(`companies`)\n    return res.companies\n  }\n\n  static async getAllJobs() {\n    let res = await this.request(`jobs`)\n    return res.jobs\n  }\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\n// JoblyApi.token = null\n\n// \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n//   \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n//   \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\n\nexport default JoblyApi","import React, { createContext, useContext } from 'react'\n\nconst UserContext = createContext()\n\nexport default UserContext\n","import React, { useContext } from 'react'\nimport { useState } from 'react'\nimport { Button, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport JoblyApi from './api'\nimport UserContext from './UserContext'\n\nexport default function JobCard({ job }) {\n\n    const {currentUser} = useContext(UserContext)\n\n    const [applied, setapplied] = useState(currentUser.applications.includes(job.id))\n\n    async function apply(id) {\n        let res = await JoblyApi.applyToJob(currentUser.username, id)\n        console.log(res)\n        setapplied(true)\n        return res\n    }\n\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title>{job.title}</Card.Title>\n                <p>Salary: <span>{job.salary}</span></p>\n                <p>Equity: <span>{job.equity}</span></p>\n                <Button onClick={() => apply(job.id)} disabled={applied}>\n                    {applied ? \"Applied\" : \"Apply\"}\n                </Button>\n            </Card.Body>\n        </Card>\n\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport axios from 'axios'\nimport JoblyApi from './api'\nimport JobCard from './JobCard'\n\nexport default function CompanyDetail() {\n    const companyParam = useParams()\n    const [company, setcompany] = useState({})\n    const [jobs, setjobs] = useState([])\n\n    useEffect(() => {\n        const getCompany = async () => {\n            let res = await JoblyApi.getCompany(companyParam.company)\n            \n            setcompany(res)\n            setjobs(res.jobs)\n        \n        }\n        getCompany()\n        \n    }, [])\n\n    \n\n    return (\n        <div>\n            <h2>{company.name}</h2>\n            <p>{company.description}</p>\n            {jobs.map((j) => {\n                return <JobCard job={j} />\n            })}\n        </div>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\n\nexport default function CompanyCard({ company }) {\n    return (\n        <Link to={`/companies/${company.handle}`} key={company.handle}>\n            <Card>\n                <Card.Body>\n                    <Card.Title>\n                        {company.name}\n                        <img src={company.logoUrl} className=\"float-right ml-5\" />\n                    </Card.Title>\n                    <p><small>{company.description}\n                    </small></p>\n                </Card.Body>\n\n            </Card>\n        </Link>\n\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport JoblyApi from './api'\nimport CompanyCard from './CompanyCard'\n\nexport default function CompanyList() {\n    const [companies, setcompanies] = useState([])\n\n    useEffect(() => {\n        const getCompanies = async () => {\n            let res = await JoblyApi.getAllCompanies()\n            setcompanies(res)\n        }\n        getCompanies()\n    }, [])\n\n\n    return (\n        <div>\n            {companies.map((c) => {\n                return <CompanyCard company={c} />\n            })}\n        </div>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport JoblyApi from './api'\nimport JobCard from './JobCard'\nimport UserContext from './UserContext'\n\n\nexport default function JobList() {\n    const [jobs, setjobs] = useState([])\n\n    const {currentUser} = useContext(UserContext)\n\n    useEffect(() => {\n        const getJobs = async () => {\n            let res = await JoblyApi.getAllJobs()\n            setjobs(res)\n        }\n        getJobs()\n    }, [])\n\n    return (\n        <div className=\"col-md-8 offset-md-2\">\n            {jobs.map((j) => {\n                return <JobCard job={j} />\n            })}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Button, Card, Container, Form, FormControl, FormGroup, FormLabel } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\n\nexport default function Login({ login }) {\n    const history = useHistory()\n\n    const [formData, setformData] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        let result = await login(formData)\n        if (result) {\n            history.push(\"/\")\n        }\n        else {\n\n        }\n    }\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        setformData(f => ({\n            ...f,\n            [e.target.name]: e.target.value\n        }))\n    }\n\n    return (\n        <Container className=\"col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n            <h2>Login</h2>\n            <Card>\n                <Card.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <FormLabel>Username</FormLabel>\n                            <FormControl type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} required />\n                        </FormGroup>\n                        <FormGroup>\n                            <FormLabel>Password</FormLabel>\n                            <FormControl type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\n                        </FormGroup>\n\n                        <Button type=\"submit\">Submit</Button>\n                    </Form>\n                </Card.Body>\n\n            </Card>\n\n        </Container>\n    )\n}\n","import React, { useState } from 'react'\nimport { Button, Card, Container, Form, FormControl, FormGroup, FormLabel } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\n\nexport default function Register({ register }) {\n    const history = useHistory()\n    const initialState = {\n        username: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\"\n    }\n    const [formData, setformData] = useState(initialState)\n\n    const handleChange = (e) => {\n        setformData(formData => ({\n            ...formData,\n            [e.target.name]: e.target.value\n        }))\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        let result = await register(formData)\n        console.log(result)\n        if (result.success) {\n            history.push(\"/\")\n        }\n        else {\n\n        }\n    }\n\n    return (\n        <Container className=\"col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n            <h2>Register</h2>\n            <Card id=\"register-form\" >\n                <Card.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <FormLabel>Username</FormLabel>\n                            <FormControl type=\"text\" name=\"username\" onChange={handleChange} required />\n                        </FormGroup>\n                        <FormGroup>\n                            <FormLabel>Password</FormLabel>\n                            <FormControl type=\"password\" name=\"password\" onChange={handleChange} required />\n                        </FormGroup>\n                        <FormGroup>\n                            <FormLabel>First Name</FormLabel>\n                            <FormControl type=\"text\" name=\"firstName\" onChange={handleChange} required />\n                        </FormGroup>\n                        <FormGroup>\n                            <FormLabel>Last Name</FormLabel>\n                            <FormControl type=\"text\" name=\"lastName\" onChange={handleChange} required />\n                        </FormGroup>\n                        <FormGroup>\n                            <FormLabel>Email</FormLabel>\n                            <FormControl type=\"email\" name=\"email\" onChange={handleChange} required />\n                        </FormGroup>\n\n\n                        <Button type=\"submit\">Submit</Button>\n                    </Form>\n                </Card.Body>\n\n            </Card>\n\n        </Container>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport UserContext from './UserContext'\n\nexport default function Home() {\n\n    const { currentUser } = useContext(UserContext)\n\n    return (\n        <div id=\"homepage\">\n            <div className=\"container text-center\">\n                <h1>Jobly</h1>\n                <p>All the jobs in one convenient place.</p>\n                {currentUser ? (\n                    <h3>Welcome back, {currentUser.firstName}!</h3>\n                ) : (\n                    <div>\n                        <Link to=\"/login\">\n                            <Button>Login</Button>\n                        </Link>\n                        <Link to=\"/signup\">\n                            <Button>Register</Button>\n                        </Link>\n\n                    </div>\n                )}\n            </div>\n        </div>\n\n    )\n}\n","import React, { useContext } from 'react'\nimport { Redirect, Route } from 'react-router'\nimport UserContext from './UserContext'\n\nexport default function ProtectedRoute({path, children}) {\n\n    const {currentUser} = useContext(UserContext)\n\n    console.log(currentUser)\n    return currentUser ? (\n        <Route path={path}>\n            {children}\n        </Route>\n    ) : (\n        <Redirect to=\"/login\"></Redirect>\n    )\n}\n","import React, { useContext, useState } from \"react\";\nimport { Button, Card, Form, FormControl, FormGroup, FormLabel } from \"react-bootstrap\";\nimport JoblyApi from \"./api\";\nimport UserContext from \"./UserContext\";\n\nexport default function Profile() {\n  const { currentUser, setcurrentUser } = useContext(UserContext);\n\n  const initialState = {\n    password: \"\",\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n  };\n\n  const [formData, setformData] = useState(initialState);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let updatedUser;\n    try {\n      updatedUser = await JoblyApi.updateCurrentUser(\n        currentUser.username,\n        formData\n      );\n    } catch (error) {\n      console.error(error);\n      return;\n    }\n\n    setformData(f => ({\n      ...f,\n      password: \"\"\n    }))\n\n    setcurrentUser(updatedUser);\n  };\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setformData((f) => ({\n      ...f,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n      <h2>Profile</h2>\n      <Card>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <FormLabel htmlFor=\"\">Username</FormLabel>\n              <FormControl plaintext readOnly defaultValue={currentUser.username} />\n            </FormGroup>\n\n            <FormGroup>\n              <FormLabel htmlFor=\"first-name\">First Name</FormLabel>\n              <FormControl name=\"firstName\" value={formData.firstName} onChange={handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <FormLabel htmlFor=\"last-name\">Last Name</FormLabel>\n              <FormControl name=\"lastName\" value={formData.lastName} onChange={handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\n              <FormControl name=\"email\" value={formData.email} onChange={handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\n              <FormControl name=\"password\" type=\"password\" value={formData.password} onChange={handleChange} required/>\n            </FormGroup>\n\n            <Button type=\"submit\">Submit</Button>\n          </Form>\n        </Card.Body>\n      </Card>\n\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport UserContext from \"./UserContext\";\nimport { Nav, Navbar, NavbarBrand } from \"react-bootstrap\"\n\nexport default function Navigation({ logout }) {\n  const { currentUser } = useContext(UserContext);\n\n  function loggedInNav() {\n    return (\n      <Nav className=\"ml-auto mr-2\">\n        <NavLink to=\"/companies\">Companies</NavLink>\n        <NavLink to=\"/jobs\">Jobs</NavLink>\n        <NavLink to=\"/profile\">Profile</NavLink>\n        <NavLink to=\"/\" onClick={logout}>\n          Logout\n        </NavLink>\n      </Nav>\n    );\n  }\n\n  function regularNav() {\n    return (\n      <Nav className=\"ml-auto mr-2\">\n        <NavLink to=\"/login\">Login</NavLink>\n        <NavLink to=\"/signup\">Register</NavLink>\n      </Nav>\n    );\n  }\n\n  return (\n    <div>\n      <Navbar>\n        <NavbarBrand>\n          <Link to=\"/\">Jobly</Link>\n        </NavbarBrand>\n\n        {currentUser ? loggedInNav() : regularNav()}\n\n      </Navbar>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport JoblyApi from './api';\nimport './App.css';\nimport CompanyDetail from './CompanyDetail';\nimport CompanyList from './CompanyList';\nimport JobList from './JobList';\nimport Login from './Login';\nimport Register from './Register';\nimport jwt from \"jsonwebtoken\"\nimport UserContext from './UserContext';\nimport Home from './Home';\nimport useLocalStorage from './useLocalStorage';\nimport ProtectedRoute from './ProtectedRoute';\nimport Profile from './Profile';\nimport Navigation from './Navigator';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [currentUser, setcurrentUser] = useState(null)\n  const [token, settoken] = useState(useLocalStorage(\"jobly-token\"))\n  const [loaded, setloaded] = useState(false)\n\n  useEffect(() => {\n\n    async function getCurrentUser() {\n      if (token) {\n        console.log(jwt.decode(token))\n        try {\n          let username = jwt.decode(token).username\n          let user = await JoblyApi.getCurrentUser(username)\n          console.log(user)\n          setcurrentUser(user)\n        } catch (error) {\n          console.error(\"App loadUserInfo: problem loading\", error)\n          setcurrentUser(null)\n        }\n\n      }\n      setloaded(true)\n    }\n\n    getCurrentUser()\n\n  }, [token])\n\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData)\n      settoken(token)\n      localStorage.setItem(\"jobly-token\", token)\n      return { success: true }\n    } catch (error) {\n      console.log(\"login failed\", error)\n      return { success: false }\n    }\n\n  }\n\n  async function register(data) {\n    try {\n      let token = await JoblyApi.register(data)\n      settoken(token)\n      localStorage.setItem(\"jobly-token\", token)\n      return { success: true }\n    } catch (error) {\n      console.error(\"signup failed\", error)\n      return { success: false }\n    }\n  }\n\n  async function logout() {\n    JoblyApi.logout()\n    settoken(null)\n    setcurrentUser(null)\n    localStorage.removeItem(\"jobly-token\")\n  }\n\n  if (!loaded) return null\n\n  return (\n    <div className=\"App\">\n\n      <UserContext.Provider value={{ currentUser, setcurrentUser }}>\n        <Router>\n          <Navigation logout={logout} />\n          <Switch>\n\n            <Route path=\"/login\">\n              <Login login={login} />\n            </Route>\n\n            <Route path=\"/signup\">\n              <Register register={register} />\n            </Route>\n\n            <ProtectedRoute path=\"/profile\">\n              <Profile />\n            </ProtectedRoute>\n\n            <ProtectedRoute path=\"/companies/:company\">\n              <CompanyDetail />\n            </ProtectedRoute>\n\n            <ProtectedRoute path=\"/companies\">\n              <CompanyList />\n            </ProtectedRoute>\n\n            <ProtectedRoute path=\"/jobs\">\n              <JobList />\n            </ProtectedRoute>\n\n            <Route path=\"/\">\n              <Home />\n            </Route>\n\n          </Switch>\n        </Router>\n      </UserContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react'\n\nexport default function useLocalStorage(key, firstValue = null) {\n    const initialState = localStorage.getItem(key) || firstValue\n\n    const [item, setitem] = useState(initialState)\n\n    useEffect(function setKeyInLocalStorage() {\n\n        if (item === null) {\n            localStorage.removeItem(key);\n        } else {\n            localStorage.setItem(key, item);\n        }\n    }, [key, item]);\n\n    return item\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}